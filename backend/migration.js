// migration.js

const mongoose = require('mongoose');
const User = require('./models/User'); // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n n√†y ƒë√∫ng
const Task = require('./models/Task'); // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n n√†y ƒë√∫ng
require('dotenv').config(); // C·∫ßn thi·∫øt n·∫øu b·∫°n l∆∞u chu·ªói k·∫øt n·ªëi DB trong file .env

// ====================================================================
// CH·ªàNH S·ª¨A D√íNG N√ÄY
// D√°n c√°i _id c·ªßa Team b·∫°n v·ª´a copy ·ªü B∆∞·ªõc 4.1 v√†o ƒë√¢y
const DEFAULT_TEAM_ID = '68ecea80953fe5363cabcbd0'; 
// ====================================================================


const migrateData = async () => {
    // Ki·ªÉm tra xem ID c√≥ h·ª£p l·ªá kh√¥ng
    if (!DEFAULT_TEAM_ID || DEFAULT_TEAM_ID.length < 24) {
        console.error('L·ªñI: Vui l√≤ng d√°n m·ªôt Team ID h·ª£p l·ªá v√†o bi·∫øn DEFAULT_TEAM_ID.');
        return;
    }
    
    try {
        // 1. K·∫øt n·ªëi t·ªõi Database
        console.log('ƒêang k·∫øt n·ªëi t·ªõi database...');
        await mongoose.connect(process.env.MONGO_URI);
        console.log('‚úÖ K·∫øt n·ªëi th√†nh c√¥ng!');

        // 2. C·∫≠p nh·∫≠t t·∫•t c·∫£ c√°c User ch∆∞a c√≥ tr∆∞·ªùng 'team'
        console.log('\nB·∫Øt ƒë·∫ßu c·∫≠p nh·∫≠t Users...');
        const userUpdateResult = await User.updateMany(
            { team: { $exists: false } }, // T√åM: t·∫•t c·∫£ user kh√¥ng c√≥ tr∆∞·ªùng 'team'
            { $set: { team: DEFAULT_TEAM_ID } }   // L√ÄM: ƒë·∫∑t tr∆∞·ªùng 'team' b·∫±ng ID m·∫∑c ƒë·ªãnh
        );
        console.log(`- ƒê√£ c·∫≠p nh·∫≠t ${userUpdateResult.modifiedCount} users.`);

        // 3. C·∫≠p nh·∫≠t t·∫•t c·∫£ c√°c Task ch∆∞a c√≥ tr∆∞·ªùng 'team'
        console.log('B·∫Øt ƒë·∫ßu c·∫≠p nh·∫≠t Tasks...');
        const taskUpdateResult = await Task.updateMany(
            { team: { $exists: false } }, // T√åM: t·∫•t c·∫£ task kh√¥ng c√≥ tr∆∞·ªùng 'team'
            { $set: { team: DEFAULT_TEAM_ID } }   // L√ÄM: ƒë·∫∑t tr∆∞·ªùng 'team' b·∫±ng ID m·∫∑c ƒë·ªãnh
        );
        console.log(`- ƒê√£ c·∫≠p nh·∫≠t ${taskUpdateResult.modifiedCount} tasks.`);

        console.log('\nüéâ Qu√° tr√¨nh chuy·ªÉn ƒë·ªïi d·ªØ li·ªáu ƒë√£ ho√†n t·∫•t!');
        process.exit(0); // Tho√°t script sau khi th√†nh c√¥ng
    } catch (error) {
        console.error('\n‚ùå ƒê√£ x·∫£y ra l·ªói trong qu√° tr√¨nh chuy·ªÉn ƒë·ªïi:', error);
        process.exit(1); // Tho√°t script v·ªõi m√£ l·ªói
    }
};

// Ch·∫°y h√†m ch√≠nh
migrateData();